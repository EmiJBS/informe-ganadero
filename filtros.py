# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U177m-4p0a2V2I2e1rBsY7fBKN7IoEiw
"""

# core/filtros.py

import ipywidgets as widgets
from IPython.display import display
import pandas as pd

# Variables globales para guardar filtros seleccionados
informe_seleccionado = None
establecimiento_seleccionado = None
fecha_inicio_seleccionado = None
fecha_fin_seleccionado = None

def elegir_filtros(df, callback=None):
    global informe_seleccionado, establecimiento_seleccionado
    global fecha_inicio_seleccionado, fecha_fin_seleccionado

    if df is None or df.empty:
        print("❌ No hay datos disponibles para aplicar filtros.")
        return

    if 'Establecimiento' not in df.columns or 'Fecha' not in df.columns:
        print("❌ Las columnas requeridas no existen en el DataFrame.")
        return

    establecimientos = df['Establecimiento'].dropna().unique().tolist()

    informe_widget = widgets.Dropdown(
        options=['Ventas', 'Compras', 'Nacimientos', 'Mortandad', 'Abigeo'],
        description='Informe:'
    )

    establecimiento_widget = widgets.Dropdown(
        options=establecimientos,
        description='Establecimiento:'
    )

    fecha_inicio_widget = widgets.DatePicker(description='Fecha inicio')
    fecha_fin_widget = widgets.DatePicker(description='Fecha fin')

    button = widgets.Button(description='Aplicar Filtros', button_style='success')

    display(informe_widget, establecimiento_widget, fecha_inicio_widget, fecha_fin_widget, button)

    def guardar_y_aplicar_filtros(_):
        nonlocal informe_widget, establecimiento_widget, fecha_inicio_widget, fecha_fin_widget

        if fecha_inicio_widget.value and fecha_fin_widget.value and fecha_inicio_widget.value > fecha_fin_widget.value:
            print("❌ La fecha de inicio no puede ser mayor que la de fin.")
            return

        informe = informe_widget.value
        establecimiento = establecimiento_widget.value
        fecha_inicio = fecha_inicio_widget.value
        fecha_fin = fecha_fin_widget.value

        # Guardamos valores globales
        globals()['informe_seleccionado'] = informe
        globals()['establecimiento_seleccionado'] = establecimiento
        globals()['fecha_inicio_seleccionado'] = fecha_inicio
        globals()['fecha_fin_seleccionado'] = fecha_fin

        print(f"✅ Filtros guardados: {informe} | {establecimiento} | {fecha_inicio} - {fecha_fin}")

        if callback:
            callback(df, informe, establecimiento, fecha_inicio, fecha_fin)

    button.on_click(guardar_y_aplicar_filtros)